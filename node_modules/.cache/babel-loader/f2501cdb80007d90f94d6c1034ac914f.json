{"ast":null,"code":"var _jsxFileName = \"/Users/santimesonpasquini/Desktop/parcial FEIII/EntregableFEIII/fe3-final/src/Components/utils/global.context.jsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { createContext, useState, useContext, useReducer, useEffect } from \"react\";\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const initialState = {\n  theme: \"\",\n  data: []\n};\nconst ContextGlobal = /*#__PURE__*/createContext();\n\nconst Context = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [dentists, setDentists] = useState([]);\n  const url = 'https://jsonplaceholder.typicode.com/users';\n  useEffect(() => {\n    axios(url).then(res => console.log(res.data));\n  }, []);\n};\n\n_s(Context, \"7ybyrpxdOUNw8S6dnM4VKwVYk5A=\");\n\n_c = Context;\nexport const ContextProvider = _ref2 => {\n  let {\n    children\n  } = _ref2;\n  //Aqui deberan implementar la logica propia del Context, utilizando el hook useMemo\n  return /*#__PURE__*/_jsxDEV(ContextGlobal.Provider, {\n    value: {\n      dentists,\n      setDentists\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n_c2 = ContextProvider;\nexport const useContextGlobal = () => {\n  _s2();\n\n  return useContext(ContextGlobal);\n};\n\n_s2(useContextGlobal, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Context\");\n$RefreshReg$(_c2, \"ContextProvider\");","map":{"version":3,"names":["createContext","useState","useContext","useReducer","useEffect","axios","initialState","theme","data","ContextGlobal","Context","children","dentists","setDentists","url","then","res","console","log","ContextProvider","useContextGlobal"],"sources":["/Users/santimesonpasquini/Desktop/parcial FEIII/EntregableFEIII/fe3-final/src/Components/utils/global.context.jsx"],"sourcesContent":["import { createContext, useState, useContext,useReducer, useEffect } from \"react\";\nimport axios from 'axios'\n\nexport const initialState = {theme: \"\", data: []}\n\n const ContextGlobal = createContext();\n\n\n\nconst Context = ({children}) => {\n  const[dentists, setDentists] = useState([])\n  const url = 'https://jsonplaceholder.typicode.com/users'\n  useEffect(() => {\n    axios(url)\n    .then(res => console.log(res.data))\n  }, [])\n}\n\nexport const ContextProvider = ({ children }) => {\n  //Aqui deberan implementar la logica propia del Context, utilizando el hook useMemo\n\n  return (\n    <ContextGlobal.Provider value={{dentists, setDentists}}>\n      {children}\n    </ContextGlobal.Provider>\n  );\n};\n\n export const useContextGlobal = () => useContext(ContextGlobal)\n"],"mappings":";;;;AAAA,SAASA,aAAT,EAAwBC,QAAxB,EAAkCC,UAAlC,EAA6CC,UAA7C,EAAyDC,SAAzD,QAA0E,OAA1E;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,OAAO,MAAMC,YAAY,GAAG;EAACC,KAAK,EAAE,EAAR;EAAYC,IAAI,EAAE;AAAlB,CAArB;AAEN,MAAMC,aAAa,gBAAGT,aAAa,EAAnC;;AAID,MAAMU,OAAO,GAAG,QAAgB;EAAA;;EAAA,IAAf;IAACC;EAAD,CAAe;EAC9B,MAAK,CAACC,QAAD,EAAWC,WAAX,IAA0BZ,QAAQ,CAAC,EAAD,CAAvC;EACA,MAAMa,GAAG,GAAG,4CAAZ;EACAV,SAAS,CAAC,MAAM;IACdC,KAAK,CAACS,GAAD,CAAL,CACCC,IADD,CACMC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACR,IAAhB,CADb;EAED,CAHQ,EAGN,EAHM,CAAT;AAID,CAPD;;GAAME,O;;KAAAA,O;AASN,OAAO,MAAMS,eAAe,GAAG,SAAkB;EAAA,IAAjB;IAAER;EAAF,CAAiB;EAC/C;EAEA,oBACE,QAAC,aAAD,CAAe,QAAf;IAAwB,KAAK,EAAE;MAACC,QAAD;MAAWC;IAAX,CAA/B;IAAA,UACGF;EADH;IAAA;IAAA;IAAA;EAAA,QADF;AAKD,CARM;MAAMQ,e;AAUZ,OAAO,MAAMC,gBAAgB,GAAG;EAAA;;EAAA,OAAMlB,UAAU,CAACO,aAAD,CAAhB;AAAA,CAAzB;;IAAMW,gB"},"metadata":{},"sourceType":"module"}